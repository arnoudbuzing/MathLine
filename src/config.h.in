#ifndef __config__h__
#define __config__h__

#define MATHLINE_VERSION "1.0"

/*
The prefix for the MathLink library is ML, while the prefix for the WSTP library is WS. This is a headache that we solve by using a prefix of MMA in the code and using defines to select the correct library at compile time.
*/
#if @WSTP@ == true
    #define MMALINK WSLINK //Special case, see below.
    #include "wstp.h"
    #define MMANAME "WSTP"
    #define MMANAME_LOWER "wstp"
#else
    #define MMALINK MLINK //Not MLLINK.
    #include "mathlink.h"
    #define MMANAME "MathLink"
    #define MMANAME_LOWER "mathlink"
#endif // @WSTP@ == true

// Concatenate ML_PREFIX to NAME.
#define ML_PRE(NAME)  @ML_PREFIX@ ## NAME

//Every MathLink/WSTP function name or type required.
#define MMAInitialize       ML_PRE(Initialize)
#define MMADeinitialize     ML_PRE(Deinitialize)
#define MMAActivate         ML_PRE(Activate)
#define MMAClose            ML_PRE(Close)
#define MMAGetUTF8String    ML_PRE(GetUTF8String)
#define MMAGetUTF8Symbol    ML_PRE(GetUTF8Symbol)
#define MMAReleaseUTF8String ML_PRE(ReleaseUTF8String)
#define MMANewPacket        ML_PRE(NewPacket)
#define MMANextPacket       ML_PRE(NextPacket)
#define MMAError            ML_PRE(Error)
#define MMAErrorMessage     ML_PRE(ErrorMessage)
#define MMAReleaseErrorMessage ML_PRE(ReleaseErrorMessage)
#define MMAPutFunction      ML_PRE(PutFunction)
#define MMAPutUTF8String    ML_PRE(PutUTF8String)
#define MMAEndPacket        ML_PRE(EndPacket)
#define MMAFlush            ML_PRE(Flush)
#define MMAReady            ML_PRE(Ready)
#define MMAGetInteger       ML_PRE(GetInteger)
#define MMAEnvironment      ML_PRE(Environment)
#define MMAEOK              ML_PRE(EOK)
#define MMAEDEAD            ML_PRE(EDEAD)
#define MMAOpenArgcArgv     ML_PRE(OpenArgcArgv)
#define MMAWaitForLinkActivity ML_PRE(WaitForLinkActivity)

#endif /* defined(__config__h__) */

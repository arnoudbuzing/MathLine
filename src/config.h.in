#ifndef __config__h__
#define __config__h__

/*
The prefix for the MathLink library is ML, while the prefix for the WSTP library is WS. This is a headache that we solve by using a prefix of MMA in the code and using defines to select the correct library at compile time.
*/
#if @WSTP@ == true
    #define ML_PREFIX WS
    #define MMALINK WSLINK //Special case, see below.
#else
    #define ML_PREFIX ML
    #define MMALINK MLINK //Not MLLINK.
#endif // @WSTP@ == true

// Concatenate ML_PREFIX to NAME.
#define ML_PRE(NAME)  ML_PREFIX ## NAME

//Every MathLink/WSTP function name or type required.
#define MMAInitialize       ML_PRE(Initialize)
#define MMAOpen             ML_PRE(Open)
#define MMADeinitialize     ML_PRE(Deinitialize)
#define MMAConnect          ML_PRE(Connect)
#define MMAClose            ML_PRE(Close)
#define MMAGetUTF8String    ML_PRE(GetUTF8String)
#define MMAGetUTF8Symbol    ML_PRE(GetUTF8Symbol)
#define MMAReleaseUTF8String ML_PRE(ReleaseUTF8String)
#define MMANewPacket        ML_PRE(NewPacket)
#define MMANextPacket       ML_PRE(NextPacket)
#define MMAError            ML_PRE(Error)
#define MMAErrorMessage     ML_PRE(ErrorMessage)
#define MMAPutFunction      ML_PRE(PutFunction)
#define MMAPutUTF8String    ML_PRE(PutUTF8String)
#define MMAEndPacket        ML_PRE(EndPacket)
#define MMAFlush            ML_PRE(Flush)
#define MMAReady            ML_PRE(Ready)
#define MMAGetInteger       ML_PRE(GetInteger)
#define MMAEnvironment      ML_PRE(Environment)

#endif /* defined(__config__h__) */
